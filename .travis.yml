language: php

# list any PHP version you want to test against
php:
  # using major version aliases 
  # aliased to a recent 5.6.x version
  - 5.6

# optionally specify a list of environments, for example to test different RDBMS
env:
  - DB=mysql

# optionally set up exclutions and allowed failures in the matrix
#matrix:
#  allow_failures:
#    - php: 7.0
#    - php: hhvm

# execute any number of scripts before the test run, custom env's are available as variables
before_script:
- mysql -e 'CREATE DATABASE IF NOT EXISTS auth;'
 
# - if [[ "$DB" == "mysql" ]]; then psql -c "create database hello_world_test;" -U postgres; fi
# - if [[ "$DB" == "mysql" ]]; then mysql -e "create database IF NOT EXISTS test_database;" -uroot; fi
# - if [[ "$DB" == "pgsql" ]]; then psql -c "DROP DATABASE IF EXISTS hello_world_test;" -U postgres; fi
 

script: 
- phpunit --configuration phpunit_mysql.xml --coverage-text 
- cd src
- cp config/dbaccess.php.template config/dbaccess.php


- php -S localhost:8000 &> /dev/null &
- cd -

- pybot robot/

# configure notifications (email, IRC, campfire etc)

before_deploy:
  - openssl aes-256-cbc -K $encrypted_2390d7ff4426_key -iv $encrypted_2390d7ff4426_iv -in auth.enc -out auth -d
  - chmod 600 auth

deploy:
  - provider: script
    skip_cleanup: true
    script: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -tt -i auth ubuntu@auth.arcada.nitor.zone /home/ubuntu/update.sh
    on:
      branch: master
